{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","handleSelectedTodo","selectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","onFilterChange","handleQuery","useState","filterStatus","setFilterStatus","query","setQuery","onChange","event","target","value","placeholder","length","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","handleCloseTodo","isLoading","setIsLoading","user","setUser","useEffect","userId","userData","finally","href","email","name","App","setTodos","isloading","setSelectedTodo","filteredTodos","filter","trim","toLowerCase","includes","data","catch","error","Error","message","status","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff0231ee.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype TodoListProps = {\n  todos: Todo[];\n  handleSelectedTodo: (todo: Todo) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<TodoListProps> = ({\n  todos,\n  handleSelectedTodo,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => (\n        <tr key={todo.id} data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-v centered is-expanded\">\n            <p\n              className={\n                todo.completed ? 'has-text-success' : 'has-text-danger'\n              }\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => handleSelectedTodo(todo)}\n            >\n              <span className=\"icon\">\n                {selectedTodo ? (\n                  <i className=\"far fa-eye-slash\" />\n                ) : (\n                  <i className=\"far fa-eye\" />\n                )}\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { useState } from 'react';\n\ntype TodoFilterProps = {\n  onFilterChange: (status: string) => void;\n  handleQuery: (value: string) => void;\n};\nexport const TodoFilter: React.FC<TodoFilterProps> = ({\n  onFilterChange,\n  handleQuery,\n}) => {\n  const [filterStatus, setFilterStatus] = useState<string>('all');\n  const [query, setQuery] = useState<string>('');\n\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilterStatus(event.target.value);\n    onFilterChange(event.target.value);\n  };\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    handleQuery(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleFilterChange}\n            value={filterStatus}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                setQuery('');\n                handleQuery('');\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL\n= 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then((res) => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport * as todosAPI from '../../api';\n\ntype TodoModalProps = {\n  selectedTodo: Todo;\n  handleCloseTodo: () => void;\n};\n\nexport const TodoModal: React.FC<TodoModalProps> = ({\n  selectedTodo,\n  handleCloseTodo,\n}) => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    todosAPI\n      .getUser(selectedTodo.userId)\n      .then((userData) => {\n        setUser(userData);\n      })\n      .finally(() => {\n        setIsLoading(true);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCloseTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {selectedTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>{user?.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport * as todosAPI from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isloading, setIsLoading] = useState(true);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterStatus, setFilterStatus] = useState<string>('all');\n  const [query, setQuery] = useState<string>('');\n\n  const handleFilterChange = (status: string) => {\n    setFilterStatus(status);\n  };\n\n  const handleSelectedTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const handleCloseTodo = () => {\n    setSelectedTodo(null);\n  };\n\n  const handleQueryChange = (value: string) => {\n    setQuery(value);\n  };\n\n  const filteredTodos = todos\n    .filter((todo) => {\n      if (filterStatus === 'all') {\n        return true;\n      }\n\n      if (filterStatus === 'active') {\n        return !todo.completed;\n      }\n\n      if (filterStatus === 'completed') {\n        return todo.completed;\n      }\n\n      return true;\n    })\n    .filter((todo) => {\n      if (query.trim() === '') {\n        return true;\n      }\n\n      return todo.title.toLowerCase().includes(query.toLowerCase());\n    });\n\n  useEffect(() => {\n    todosAPI\n      .getTodos()\n      .then((data) => {\n        setTodos(data);\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        throw new Error(error.message);\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onFilterChange={handleFilterChange}\n                handleQuery={handleQueryChange}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isloading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filteredTodos}\n                  handleSelectedTodo={handleSelectedTodo}\n                  selectedTodo={selectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo !== null && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          handleCloseTodo={handleCloseTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}